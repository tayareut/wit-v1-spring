openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: vinyl
    description: Operations about vinyls
paths:
  /vinyls:
    post:
      tags:
        - vinylRequest
      summary: Add a new vinyl to the store
      description: Add a new vinyl to the store
      operationId: createVinyl
      requestBody:
        description: Create a new vinyl in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VinylRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/VinylRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VinylRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VinylRequest'
            application/xml:
              schema:
                $ref: '#/components/schemas/VinylRequest'
        '400':
          description: Validation exception
      security:
        - petstore_auth:
            - write:VinylRequests
            - read:VinylRequests
    get:
      tags:
        - vinyl
      summary: Find all vinyls
      description: Returns all vinyls
      operationId: getAllVinyls
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vinyl'
    put:
      tags:
        - vinyl
      summary: Update an existing vinyl
      description: Update an existing vinyl by Id
      operationId: updateVinyl
      parameters:
        - id: 10
          in: path
          description: id that need to be deleted
          required: true
          schema:
            type: integer
      requestBody:
        description: Update an existent vinyl in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vinyl'
          application/xml:
            schema:
              $ref: '#/components/schemas/Vinyl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Vinyl'
      responses:
        default:
          description: successful operation
  /vinyls/{id}:
    get:
      tags:
        - vinyl
      summary: Find vinyl by ID
      description: Returns a single vinyl
      operationId: getVinylById
      parameters:
        - name: vinylId
          in: path
          description: ID of vinyl to return
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vinyl'
            application/xml:
              schema:
                $ref: '#/components/schemas/Vinyl'
        '400':
          description: Invalid ID supplied
        '404':
          description: Vinyl not found
      security:
        - api_key: []
        - petstore_auth:
            - write:vinyls
            - read:vinyls
    delete:
      tags:
        - vinyl
      summary: Delete a vinyl
      description: delete a vinyl
      operationId: deleteVinyl
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: vinylId
          in: path
          description: Vinyl id to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '400':
          description: Invalid vinyl value
      security:
        - petstore_auth:
            - write:vinyls
            - read:vinyls
  /vinyl/artist:
    get:
      tags:
        - vinyl
      summary: Find Vinyls by artist
      description: Search is case insensitive
      operationId: getVinylsWithArtistFilteredSorted
      parameters:
        - name: artist
          in: query
          description: Artists to filter by
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vinyl'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vinyl'
        '400':
          description: Invalid artist value
      security:
        - petstore_auth:
            - write:vinyls
            - read:pets
components:
  schemas:
    Vinyl:
      properties:
        id:
          type: integer
          format: int32
          example: 10
        artist:
          type: string
          example: artistName
        album:
          type: string
          example: albumName
        releaseDate:
          type: integer
          format: int32
          example: 10
        listPrice:
          type: integer
          format: int32
          example: 10
    VinylRequest:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 10
        artist:
          type: string
          example: artistName
        album:
          type: string
          example: albumName
        releaseDate:
          type: integer
          format: int32
          example: 10
        listPrice:
          type: integer
          format: int32
          example: 10
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Vinylt:
      description: Vunyl object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Vinyl'
        application/xml:
          schema:
            $ref: '#/components/schemas/Vinyl'
    VinylArray:
      description: List of vinyl object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Vinyl'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://vinylstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify vinyls in your account
            read:pets: read your vinyls
    api_key:
      type: apiKey
      name: api_key
      in: header